"""
Make model specifications

click application that takes a template model specification file
and locations for which to create model specs and uses jinja2 to
render model specs with the correct location parameters plugged in.

It will look for the model spec template in "model_spec.in" in the directory
``src/vivarium_gates_shigella_vaccine/model_specifications``.
Specify multiple locations in a file called "locations.txt" in the same
directory. You can create a single location using the "-s" option. Using the
single location option will override an existing locations file.

The application will look for the model spec and locations files based
on the python environment that is active and these files don't need
to be specified if the default names and location are used.
"""
from pathlib import Path

import click
from jinja2 import Template
from loguru import logger
from vivarium.framework.utilities import handle_exceptions

from vivarium_gates_shigella_vaccine.paths import MODEL_SPEC_DIR, ARTIFACT_ROOT
from vivarium_gates_shigella_vaccine.globals import LOCATIONS
from vivarium_gates_shigella_vaccine.data import artifact_builder


@click.command()
@click.option('-t', '--template',
              default=str(MODEL_SPEC_DIR / 'model_spec.in'),
              show_default=True,
              type=click.Path(exists=True, dir_okay=False),
              help='The model specification template file.')
@click.option('-s', '--single-location',
              default='',
              help='Specify a single location name.')
@click.option('-o', '--output-dir',
              default=str(MODEL_SPEC_DIR),
              show_default=True,
              type=click.Path(exists=True, dir_okay=True),
              help='Specify an output directory. Directory must exist.')
def make_specs(template: str, single_location: str, output_dir: str) -> None:
    """Generate model specifications based on a template.

    The default template lives here:

    ``vivarium_gates_shigella_vaccine/src/vivarium_gates_shigella_vaccine/model_specification/model_spec.in``

    Supply the locations for which you want a model spec generated by filling
    in the empty 'locations.txt' file. A template for this file can be found at

    ``vivarium_gates_shigella_vaccine/src/vivarium_gates_shigella_vaccine/model_specification/locations.txt``

    with instructions for it's use.

    """
    template = Path(template)
    output_dir = Path(output_dir)

    if single_location:
        locations = [single_location]
    else:
        locations = LOCATIONS

    with template.open('r') as infile:
        jinja_temp = Template(infile.read())

    logger.info(f'Writing model spec(s) to "{output_dir}"')

    for location in locations:
        location_sanitized = location.replace(" ", "_").replace("'", "_").lower()
        filespec = output_dir / f'{location_sanitized}.yaml'
        with filespec.open('w+') as outfile:
            logger.info(f'   Writing {filespec.name}')
            outfile.write(jinja_temp.render(
                location_proper=location,
                location_sanitized=location_sanitized))


@click.command()
@click.option('-l', '--location',
              required=True,
              type=click.Choice(LOCATIONS),
              help='The location for which to build an artifact')
@click.option('-o', '--output-dir',
              default=str(ARTIFACT_ROOT),
              show_default=True,
              type=click.Path(exists=True, dir_okay=True),
              help='Specify an output directory. Directory must exist.')
def build_artifact(location: str, output_dir: str) -> None:
    """Build an artifact for the provided location"""
    main = handle_exceptions(artifact_builder.build, logger, with_debugger=True)
    main(location, output_dir)
